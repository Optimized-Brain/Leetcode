#include <vector>
using namespace std;
class Solution {
public:
    bool valid(char board[9][9], int r, int c, char d){
        for(int i=0;i<9;i++){
            if(board[r][i]==d)return false;
            if(board[i][c]==d)return false;
            if(board[3*(r/3)+i/3][3*(c/3)+i%3]==d)return false;
        }
        return true;
    }
    bool solve(char board[9][9]){
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(board[i][j]=='.'){
                    for(char d='1';d<='9';d++){
                        if(valid(board,i,j,d)){
                            board[i][j]=d;
                            if(solve(board)) return true;
                            board[i][j]='.';
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    void solveSudoku(vector<vector<char>>& b){
        char board[9][9];
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                board[i][j]=b[i][j];
            }
        }
        solve(board);
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                b[i][j]=board[i][j];
            }
        }
    }
};
