#include <vector>
#include <algorithm>
using namespace std;
class Solution {
public:
    long long maxSum(vector<vector<int>>& grid, vector<int>& limits, int k) {
        vector<int> picks;
        int n = grid.size();
        for (int i = 0; i < n; i++) {
            sort(grid[i].begin(), grid[i].end(), greater<int>());
            int cnt = min((int)grid[i].size(), limits[i]);
            for (int j = 0; j < cnt; j++) {
                picks.push_back(grid[i][j]);
            }
        }
        sort(picks.begin(), picks.end(), greater<int>());
        long long ans = 0;
        for (int i = 0; i < k && i < picks.size(); i++) {
            ans += picks[i];
        }
        return ans;
    }
};
